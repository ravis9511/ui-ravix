---
interface TableItem {
  name: string;
  color: string;
  type: string;
  stock: number;
}
/* You can use this interface above to define the structure of your data and receive it as a prop */

const tableData: TableItem[] = [
  {
    name: "T-Shirt",
    color: "Blue",
    type: "Tops",
    stock: 15,
  },
  {
    name: "Jeans",
    color: "Black",
    type: "Bottoms",
    stock: 32,
  },
  {
    name: "Sneakers",
    color: "White",
    type: "Shoes",
    stock: 23,
  },
  {
    name: "Dress",
    color: "Red",
    type: "Dresses",
    stock: 11,
  },
  {
    name: "Skirt",
    color: "Green",
    type: "Skirts",
    stock: 7,
  },
  {
    name: "Shirt",
    color: "Blue",
    type: "Tops",
    stock: 25,
  },
  {
    name: "Jeans",
    color: "Black",
    type: "Pants",
    stock: 18,
  },
];
---

{
  tableData.length > 0 && (
    <div class="relative  overflow-x-auto m-2 shadow-md dark:shadow-lg dark:shadow-black rounded-lg border border-gray-300 dark:border-zinc-800">
      <table class="w-full text-base text-left text-gray-800 dark:text-gray-300  shadow-md rounded-lg">
        <thead class="text-sm uppercase text-gray-800 dark:text-gray-300 bg-gray-200 dark:bg-zinc-800">
          <tr>
            <th
              scope="col"
              class="px-6 py-3">
              Product
            </th>
            <th
              scope="col"
              class="px-6 py-3">
              Color
            </th>
            <th
              scope="col"
              class="px-6 py-3">
              Type
            </th>
            <th
              scope="col"
              class="px-6 py-3">
              Stock
            </th>
          </tr>
        </thead>
        <tbody class="divide-y divide-gray-300 dark:divide-zinc-800">
          {tableData.map((item) => (
            <tr
              class={`${
                item.stock > 14
                  ? ""
                  : item.stock > 10
                    ? "bg-yellow-200 dark:bg-yellow-900"
                    : "bg-red-800 dark:bg-red-900 text-white "
              }`}>
              <th
                scope="row"
                class="px-6 py-3 font-semibold  whitespace-normal">
                {item.name}
                
                  {item.stock > 14 ? (
                    ""
                  ) :  item.stock > 10 ? (
                    <span class="text-sm ml-3 font-normal ">Limited stock</span>
                  ) : (
                    <span class="text-sm ml-3 font-normal ">Running out</span>
                  )}
                
              </th>
              <td class="px-6 py-3">{item.color}</td>
              <td class="px-6 py-3">{item.type}</td>
              <td
                class={`${item.stock === 15 ? "bg-cyan-200 dark:bg-cyan-800 text-black dark:text-white px-6 py-3" : "px-6 py-3"}`}>
                {item.stock}
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  )
}
