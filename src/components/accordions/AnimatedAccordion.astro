---

---

<div
  id="accordion-container"
  class="border mb-12 border-gray-300 divide-y divide-gray-300 dark:border-zinc-800 dark:divide-zinc-800 rounded-lg max-w-3xl shadow-md dark:shadow-black overflow-hidden">
  <div
    class="group text-zinc-900 dark:text-zinc-300 bg-gray-100 dark:bg-zinc-950">
    <button
      data-accordion="button"
      type="button"
      class="group/button peer flex items-center transition-colors ease-in justify-between px-4 py-4 cursor-pointer w-full text-start focus:outline-none dark:aria-expanded:bg-zinc-900 aria-expanded:bg-gray-200"
      aria-expanded="false"
      aria-controls="panel-1"
      id="header-1">
      <span class="text-xl font-semibold"> Accordion Header </span>
      <svg
        class="w-5 h-5 shrink-0 transition duration-300 group-aria-expanded/button:-rotate-180"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
        aria-hidden="true">
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M19 9l-7 7-7-7"
        ></path>
      </svg>
    </button>

    <div
      id="panel-1"
      class="transition-all opacity-30 duration-300 max-h-0 overflow-hidden peer-aria-expanded:max-h-screen peer-aria-expanded:opacity-100 ease-in-out"
      aria-labelledby="header-1"
      role="region">
      <div class="px-6 text-start text-lg py-5 bg-gray-100 dark:bg-zinc-950">
        Panel 1 content goes here.
      </div>
    </div>
  </div>
  <div
    class="group text-zinc-900 dark:text-zinc-300 bg-gray-100 dark:bg-zinc-950">
    <button
      type="button"
      data-accordion="button"
      class="group/button peer flex items-center transition-color ease-in justify-between w-full px-4 py-4 cursor-pointer text-start focus:outline-none dark:aria-expanded:bg-zinc-900 aria-expanded:bg-gray-200"
      aria-expanded="false"
      aria-controls="panel-2"
      id="header-2">
      <span class="text-xl font-semibold"> Accordion Header </span>
      <svg
        class="w-5 h-5 shrink-0 transition duration-300 group-aria-expanded/button:-rotate-180"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
        aria-hidden="true">
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M19 9l-7 7-7-7"
        ></path>
      </svg>
    </button>

    <div
      id="panel-2"
      class="transition-all opacity-30 duration-300 max-h-0 overflow-hidden peer-aria-expanded:max-h-screen peer-aria-expanded:opacity-100 ease-in-out"
      aria-labelledby="header-2"
      role="region">
      <div class="px-6 text-start text-lg py-5 bg-gray-100 dark:bg-zinc-950">
        Users can click on a panel's header to expand or collapse its content,
        allowing for a more organized and space-efficient presentation of
        information, especially when dealing with a lot of content on a webpage.
        Accordions are commonly used in FAQs, product descriptions, and other
        situations where content needs to be organized into easily navigable
        sections.
      </div>
    </div>
  </div>
  <!-- Add more accordion items as needed -->
</div>
<script is:inline>
  function setAccordion() {
    /**
     * Retrieves the accordion container element by its ID.
     * @returns {HTMLElement} The accordion container element, or `null` if not found.
     */
    const accordion = document.getElementById("accordion-container");
  const buttons = accordion?.querySelectorAll('[data-accordion="button"]');//To prevent buttons inside the accordion from being selected
    /**
     * Adds click event listeners to accordion header buttons, toggling the `aria-expanded` attribute to control the accordion's open/closed state.
     */
    buttons?.forEach((button) => {
      button.addEventListener("click", () => {
        if (button.getAttribute("aria-expanded") === "true") {
          button.setAttribute("aria-expanded", "false");

          return;
        } else {
          buttons.forEach((button) => {
            button.setAttribute("aria-expanded", "false");
          });

          button.setAttribute("aria-expanded", "true");
        }
      });
    });
  }

  setAccordion();
</script>
