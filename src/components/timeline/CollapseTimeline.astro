---
const timelineData = [
  {
    date: "2024-05-20",
    version: "v1.0.0",
    changelogUrl: "#",
    changes: ["Added a new feature", "Fixed a bug", "Improved performance"],
  },
  {
    date: "2024-04-10",
    version: "v0.9.0",
    changelogUrl: "#",
    changes: ["Added a new feature", "Improved performance"],
  },
  {
    date: "2024-03-11",
    version: "v0.8.0",
    changelogUrl: "#",
    changes: ["Fixed a bug"],
  },
  {
    date: "2024-02-10",
    version: "v0.0.1",
    changelogUrl: "#",
    changes: [
      "Initial Release",
      "Fully Tested",
      "Documentation",
      "Ready for Production",
    ],
  },
];
const timeLineName="collapseTimeline";
/**
To accept these as props you can use the following syntax:
 
interface TimelineEntry {
  date: string;
  version: string;
  changelogUrl: string;
  changes: string[];
  }
  interface TimelineData {
    timelineData: TimelineEntry[];
    timeLineName: string;
  }
  const { timelineData, timeLineName } = Astro.props as TimelineData;

  To call the component you can use the following syntax:
  ---
  import CollapseTimeline from "path/to/components/CollapseTimeline.astro";
  // Fetch data from a file or API. Or use a static array of data similar to the one above.
  ---
  <CollapseTimeline timelineData={timelineData} />
 */
---

<div
  class="px-5 py-2 w-full flex flex-wrap items-start justify-start justify-items-start text-gray-900 dark:text-gray-100">
  <div class="flex flex-wrap w-full">
    <ol class="w-full">
      {
        timelineData.map((item, index) => (
          <li class="flex relative py-4 items-center justify-center">
            <div class="w-1/6 pr-3 pl-2 text-end text-sm md:text-base">
              <time datetime={item.date}>
                {new Date(item.date).toLocaleDateString("en-US", {
                  day: "numeric",
                  month: "short",
                  year: "numeric",
                })}
              </time>
            </div>
            {index !== timelineData.length - 1 && (
              <div class="h-[calc(60%)] w-3 absolute left-[calc(100%/6)] top-1/2 flex items-center justify-center">
                <div class="h-full w-[2px] bg-indigo-400 dark:bg-indigo-900" />
              </div>
            )}
            {index !== 0 && (
              <div class="h-[calc(60%)] w-3 absolute left-[calc(100%/6)] bottom-1/2 flex items-center justify-center">
                <div class="h-full w-[2px] bg-indigo-400 dark:bg-indigo-900" />
              </div>
            )}
            <div class="w-3 h-3 rounded-full bg-indigo-400 dark:bg-indigo-900 items-center justify-center  relative z-10" />
            <details class="group flex-grow ml-3 flex flex-col border border-gray-400 dark:border-zinc-800 rounded-lg overflow-hidden " name={timeLineName}>
              <summary class="flex items-center justify-between px-3 py-3 cursor-pointer text-zinc-900 dark:text-zinc-300 bg-gray-100 dark:bg-zinc-950 dark:group-open:bg-zinc-900 group-open:bg-gray-200">
                <span class="text-base font-semibold"> {item.version}</span>
                <svg
                  class="w-5 h-5 shrink-0 motion-safe:transition motion-safe:duration-300 group-open:-rotate-180"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor">
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M19 9l-7 7-7-7"
                  />
                </svg>
              </summary>
              <div class="leading-relaxed px-4 py-3">
                
                <ul class="list-disc list-inside mb-2 text-sm md:text-base">
                  {item.changes.map((change) => (
                    <li>{change}</li>
                  ))}
                </ul>
                <a class="text-blue-600 dark:text-blue-400 hover:text-blue-700 text-sm md:text-base" href={item.changelogUrl}>Full Changelogs</a>
              </div>
            </details>
          </li>
        ))
      }
    </ol>
  </div>
</div>
