---
const timelineData = [
  {
    date: "2024-05-20",
    version: "v1.0.0",
    changelogUrl: "#",
    changes: [
      "Added a new feature",
      "Fixed a bug",
      "Improved performance"
    ]
  },
  {
    date: "2024-04-10",
    version: "v0.9.0",
    changelogUrl: "#",
    changes: [
      "Added a new feature",
      "Improved performance"
    ]
  },
  {
    date: "2024-03-11",
    version: "v0.8.0",
    changelogUrl: "#",
    changes: [
      "Fixed a bug"
    ]
  },
  {
    date: "2024-02-10",
    version: "v0.0.1",
    changelogUrl: "#",
    changes: [
      "Initial Release",
      "Fully Tested",
      "Documentation",
      "Ready for Production"
    ]
  }
];
/**
To accept these as props you can use the following syntax:
 
interface TimelineEntry {
  date: string;
  version: string;
  changelogUrl: string;
  changes: string[];
  }
  interface TimelineData {
    timelineData: TimelineEntry[];
  }
  const { timelineData } = Astro.props as TimelineData;

  To call the component you can use the following syntax:
  ---
  import AltTimeline from "path/to/components/AltTimeline.astro";
  // Fetch data from a file or API. Or use a static array of data similar to the one above.
  ---
  <AltTimeline timelineData={timelineData} />
 */
---

<div class="px-5 py-2 w-full flex flex-wrap items-start justify-start justify-items-start text-gray-900 dark:text-gray-100">
  <div class="flex flex-wrap w-full">
    <ol class="w-full">
      {timelineData.map((item, index) => (
        <li class="flex relative py-4 items-start justify-center">
         
          {index !== timelineData.length - 1 && (
              <div class="h-full w-3 absolute left-0 top-6 flex items-center justify-center">
                <div class="h-full w-[2px] bg-indigo-400 dark:bg-indigo-900" />
              </div>
            )}
           
          <div class="w-3 h-3 mt-2 rounded-full bg-indigo-400 dark:bg-indigo-900 items-center justify-center  relative z-10"></div>
          <div class="flex-grow ml-3 flex flex-col ">
            <time class="text-lg text-indigo-600 dark:text-indigo-400" datetime={item.date}>{new Date(item.date).toLocaleDateString('en-US', { day: 'numeric', month: 'long', year: 'numeric' })}</time>
            <h2 class="font-medium ml-6 text-sm my-1 tracking-wider">
              {item.version}
              <a class="text-blue-600 dark:text-blue-400 hover:text-blue-700 ml-1" href={item.changelogUrl}>Full Changelogs</a>
              
            </h2>
            <div class="leading-relaxed ml-6">
              <ul class="list-disc list-inside text-sm md:text-base">
                {item.changes.map((change) => (
                  <li>{change}</li>
                ))}
              </ul>
            </div>
          </div>
        </li>
      ))}
    </ol>
  </div>
</div>
