---
import WCDropdown from "./WCDropDown.astro";
import "../styles/global.css";
interface Props {
  WCDropDownContent: Array<{ label: string; type: string; href?: string }>;
}
const { WCDropDownContent } = Astro.props;
---

<nav
  id="tocBar"
  aria-label="Table of Contents"
  class="inline-flex max-h-max w-full items-center gap-x-2 text-ellipsis text-pretty text-xs text-zinc-950 lg:hidden dark:text-zinc-300"
>
  <WCDropdown
    menuLabel="On This Page"
    menuItems={WCDropDownContent}
    xAlignment="left"
    yAlignment="top"
  />
  <span id="currentHeader" class="text-pretty"
    >{WCDropDownContent[0].label}</span
  >
</nav>

<script>
  const setCurrentHeadingTOCBar: IntersectionObserverCallback = (entries) => {
    // loop to each entries (headings) in the page
    for (let entry of entries) {
      // equivalent to the slug returned from pageHeadings
      const { id } = entry.target;

      // get the TOC link's element for the current entry
      const tocList = document
        .getElementById("tocBar")
        ?.querySelector(` a[href='#${id}']`);

      if (!tocList) return;
      // check if the entry is intersecting
      if (entry.isIntersecting) {
        const currentHeading = document.getElementById("currentHeader");
        // add active class to the currently active entry

        if (currentHeading && tocList.textContent) {
          currentHeading.innerText = tocList.textContent;
        }
        // remove active class from all links
        // add active class to the currently active entry
      }
    }
  };
  const observerOptions = {
    threshold: 1,
    rootMargin: "0px 0px -50%",
  };
  function setObserverTOCBar() {
    const observer = new IntersectionObserver(
      setCurrentHeadingTOCBar,
      observerOptions,
    );
    // select all headings to observe
    const elToObserve = document.querySelectorAll("section :is(h2,h1)");

    // finally, observe the elements
    elToObserve.forEach((el) => observer.observe(el));
  }
  function smoothScrollTOCBar() {
    document
      .getElementById("tocBar")
      ?.querySelectorAll("a")
      .forEach((anchor: HTMLAnchorElement) =>
        anchor.addEventListener("click", function (e) {
          e.preventDefault();
          const scrollTarget = document.querySelector(
            this.getAttribute("href") as string,
          );

          if (!scrollTarget) return;
          let position = scrollTarget.getBoundingClientRect().top;
          position += window.scrollY - 120;
          window.scrollTo({ top: position, behavior: "smooth" });
        }),
      );
  }
  function inViewCheckTOCBar() {
    const tocBar = document.getElementById("tocBar");
    if (tocBar?.getClientRects().length === 0) {
      return;
    } else {
      smoothScrollTOCBar();
      setObserverTOCBar();
    }
  }
  document.addEventListener("astro:page-load", inViewCheckTOCBar);
  document.addEventListener("astro:before-swap", inViewCheckTOCBar);
</script>
